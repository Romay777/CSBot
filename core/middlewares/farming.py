from random import getrandbits, uniform, randint
from aiogram import types
from asyncio import sleep


async def by_game(user_id, callback: types.CallbackQuery, request):
    #  STEP 1 START
    await callback.message.edit_text("–ö–æ–ª–ª–∏–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é...", reply_markup=None)
    await sleep(round(uniform(1.1, 2.5), 1))
    await callback.message.edit_text("–ó–∞—Ö–æ–¥–∏–º –Ω–∞ —Ç–æ—á–∫—É...")
    await sleep(round(uniform(1.1, 2.5), 1))
    # TODO –°–¥–µ–ª–∞—Ç—å –≤–ª–∏—è–Ω–∏–µ –Ω–∞–≤—ã–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    success = getrandbits(1)  # random value True-False
    if success:
        current_msg_text = "–£–¥–∞—á–Ω—ã–π entry-kill!üî•"
        await callback.message.edit_text(current_msg_text)
        result = (randint(8000, 10000) // 10) * 10
    else:
        current_msg_text = f"–û—à–∏–±–∫–∞ –æ—Ç <b>{await request.get_random_team_player(user_id)}</b>üí¢"
        await callback.message.edit_text(current_msg_text)
        result = 4000

    await sleep(1.3)
    #  STEP 1 END

    #  STEP 2 START
    current_msg_text = f"–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—Å—Ç–∞–ª–∞—Å—å {randint(2, 5)} <b>vs</b> {randint(1, 4)}"
    await callback.message.edit_text(current_msg_text)
    result += 6000 if int(current_msg_text[-1]) < 4 else 3000
    await sleep(round(uniform(1.4, 2.8), 1))
    #  STEP 2 END

    #  STEP 3 START
    success = getrandbits(1)
    if success:
        current_msg_text = f"<b>{await request.get_random_team_player(user_id)}</b> –æ—Å—Ç–∞–ª—Å—è –≤ –∫–ª–∞—Ç—á–µ...‚ö†Ô∏è"
        await callback.message.edit_text(current_msg_text)
        result += randint(4000, 5700) // 10 * 10
        await sleep(round(uniform(1.5, 2.5), 1))
    else:
        current_msg_text = "<b>–†–∞—É–Ω–¥ –ø—Ä–æ–∏–≥—Ä–∞–Ωüí¢</b>"
        await callback.message.edit_text(current_msg_text)
        result += randint(2000, 2700) // 10 * 10
        await sleep(1.5)
        return result

    success = getrandbits(1)
    if success:
        current_msg_text = "<b>–ö–ª–∞—Ç—á –≤—ã–∏–≥—Ä–∞–Ω!‚úÖ</b>"
        result += (randint(4000, 5200) // 10) * 10
    else:
        current_msg_text = "<b>–ö–ª–∞—Ç—á –ø—Ä–æ–∏–≥—Ä–∞–Ω!üí¢</b>"
        result += 2200
    await callback.message.edit_text(current_msg_text)

    await sleep(1.5)
    return result


async def by_fake_match(user_id, callback: types.CallbackQuery, request, coefficient):
    #  STEP 1 START
    await callback.message.edit_text("–í—ã—Ö–æ–¥–∏–º –Ω–∞ –Ω—É–∂–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã... üë•", reply_markup=None)
    await sleep(round(uniform(2, 2.5), 1))
    await callback.message.edit_text("–ñ–¥—ë–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∏–≥—Ä–æ–∫–æ–≤... ‚è≥")
    await sleep(round(uniform(1.1, 3), 1))
    success = getrandbits(4)
    if success != 0:
        current_msg_text = "–ò–≥—Ä–æ–∫–∏ —Å–æ–≥–ª–∞—Å–Ω—ã!"
        await callback.message.edit_text(current_msg_text)
        result = (randint(8000, 10000) // 10) * 10
        await sleep(round(uniform(1.1, 3), 1))
    else:
        current_msg_text = f"<b>–ö—Ç–æ-—Ç–æ –Ω–∞—Å —Å–¥–∞–ª! üìõ</b>"
        await callback.message.edit_text(current_msg_text)
        await sleep(3)
        result = -10000
    # TODO –°–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —Å—Ç–∞–≤–∫–∏-> –≤—ã—à–µ - –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥, –Ω–æ –±–æ–ª—å—à–µ —Ä–∏—Å–∫ [input == 1/2/3 (1.2/1.5/2)](–≤ –∫–æ–Ω—Ü–µ)
    return result
